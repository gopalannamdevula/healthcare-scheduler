

services:

  ## =============================
  ## Eureka Discovery Server
  ## =============================
  eureka-server:
    build:
      context: ./Eureka/eureka
    container_name: eureka
    ports:
      - "8761:8761"
    networks:
      - backend
## =============================
  ## MongoDB for Patient Service
  ## =============================
  mongo-db:
    image: mongo:6
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - backend

  ## =============================
  ## PostgreSQL for Doctor Service
  ## =============================
  postgres-doctor:
    image: postgres:15
    container_name: postgres-doctor
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: doctor_admin
      POSTGRES_PASSWORD: doctor_pass
      POSTGRES_DB: doctor_service_db
    volumes:
      - postgres_doctor_data:/var/lib/postgresql/data
    networks:
      - backend

  ## =============================
  ## PostgreSQL for Appointment Service
  ## =============================
  postgres-appointment:
    image: postgres:15
    container_name: postgres-appointment
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: appt_admin
      POSTGRES_PASSWORD: appt_pass
      POSTGRES_DB: appointment_service_db
    volumes:
      - postgres_appointment_data:/var/lib/postgresql/data
    networks:
      - backend

  ## =============================
  ## Patient Microservice (MongoDB)
  ## =============================
  patient-service:
    build:
      context: ./Patient/Patient
    container_name: patient-service
    ports:
      - "8081:8080"
    depends_on:
      - mongo-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend

  ## =============================
  ## Doctor Microservice (Postgres)
  ## =============================
  doctor-service:
    build:
      context: ./doctor/doctor
    container_name: doctor-service
    ports:
      - "8082:8080"
    depends_on:
      - postgres-doctor
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend

  ## =============================
  ## Appointment Microservice (Postgres)
  ## =============================
  appointment-service:
    build:
      context: ./appointment/appointment
    container_name: appointment-service
    ports:
      - "8083:8080"
    depends_on:
      - postgres-appointment
      - patient-service
      - doctor-service
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - backend
  ## =============================
  ## API Gateway
  ## =============================
  api-gateway:
    build:
      context: ./api-gateway/apigateway
    container_name: api-gateway
    ports:
      - "8085:8080"
    depends_on:
      - eureka-server
      - patient-service
      - doctor-service
      - appointment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_SERVER: http://eureka-server:8761/eureka
    networks:
      - backend

volumes:
  mongo_data:
  postgres_doctor_data:
  postgres_appointment_data:

networks:
  backend:
    driver: bridge
